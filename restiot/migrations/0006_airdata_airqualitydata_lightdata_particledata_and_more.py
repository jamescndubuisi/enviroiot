# Generated by Django 5.0.7 on 2024-08-01 18:42

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('restiot', '0005_alter_sensordatapoint_sensor_created_timestamp_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='AirData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temperature_value', models.FloatField(blank=True, max_length=10, null=True)),
                ('temperature_unit', models.CharField(blank=True, max_length=10, null=True)),
                ('temperature_celsius', models.FloatField(blank=True, max_length=100, null=True)),
                ('temperature_fahrenheit', models.DateTimeField(blank=True, max_length=100, null=True)),
                ('pressure_value', models.FloatField(blank=True, max_length=10, null=True)),
                ('pressure_unit', models.CharField(blank=True, max_length=10, null=True)),
                ('humidity_value', models.FloatField(blank=True, max_length=10, null=True)),
                ('humidity_unit', models.CharField(blank=True, max_length=10, null=True)),
                ('gas_sensor_resistance', models.FloatField(blank=True, max_length=10, null=True)),
                ('generated_timestamp', models.DateTimeField(auto_now_add=True, max_length=100)),
                ('created_timestamp', models.DateTimeField(auto_now_add=True, max_length=100)),
                ('modified_timestamp', models.DateTimeField(auto_now=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='AirQualityData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('air_quality_index', models.FloatField(blank=True, null=True)),
                ('air_quality_class', models.CharField(blank=True, max_length=10, null=True)),
                ('carbon_dioxide_value', models.FloatField(blank=True)),
                ('breath_equivalent_voc', models.FloatField(blank=True)),
                ('air_quality_calibration_status', models.IntegerField(blank=True)),
                ('air_quality_calibration_meaning', models.CharField(blank=True, max_length=10)),
                ('generated_timestamp', models.DateTimeField(auto_now_add=True, max_length=100)),
                ('created_timestamp', models.DateTimeField(auto_now_add=True, max_length=100)),
                ('modified_timestamp', models.DateTimeField(auto_now=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='LightData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('light_lux', models.FloatField(blank=True, null=True)),
                ('light_unit', models.CharField(blank=True, max_length=10, null=True)),
                ('white_level_balance', models.FloatField(blank=True, null=True)),
                ('generated_timestamp', models.DateTimeField(auto_now_add=True, max_length=100)),
                ('created_timestamp', models.DateTimeField(auto_now_add=True, max_length=100)),
                ('modified_timestamp', models.DateTimeField(auto_now=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ParticleData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('particle_concentration', models.FloatField(blank=True, null=True)),
                ('particle_concentration_unit', models.CharField(blank=True, max_length=10, null=True)),
                ('particle_duty_cycle_pc', models.FloatField(blank=True, null=True)),
                ('particle_valid', models.BooleanField(blank=True, null=True)),
                ('generated_timestamp', models.DateTimeField(auto_now_add=True, max_length=100)),
                ('created_timestamp', models.DateTimeField(auto_now_add=True, max_length=100)),
                ('modified_timestamp', models.DateTimeField(auto_now=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='SoundData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sound_decibel_SPL_dBA', models.FloatField(blank=True, null=True)),
                ('sound_unit', models.CharField(blank=True, max_length=10, null=True)),
                ('frequency_band_125', models.FloatField(blank=True, null=True)),
                ('frequency_band_250', models.FloatField(blank=True, null=True)),
                ('frequency_band_500', models.FloatField(blank=True, null=True)),
                ('frequency_band_1000', models.FloatField(blank=True, null=True)),
                ('frequency_band_2000', models.FloatField(blank=True, null=True)),
                ('frequency_band_4000', models.FloatField(blank=True, null=True)),
                ('peak_amp_mPa', models.FloatField(blank=True, null=True)),
                ('stable', models.FloatField(blank=True, null=True)),
                ('generated_timestamp', models.DateTimeField(auto_now_add=True, max_length=100)),
                ('created_timestamp', models.DateTimeField(auto_now_add=True, max_length=100)),
                ('modified_timestamp', models.DateTimeField(auto_now=True, max_length=100)),
            ],
        ),
        migrations.RenameField(
            model_name='sensordatapoint',
            old_name='sensor_created_timestamp',
            new_name='created_timestamp',
        ),
        migrations.RenameField(
            model_name='sensordatapoint',
            old_name='sensor_generated_timestamp',
            new_name='generated_timestamp',
        ),
        migrations.RenameField(
            model_name='sensordatapoint',
            old_name='sensor_modified_timestamp',
            new_name='modified_timestamp',
        ),
    ]
