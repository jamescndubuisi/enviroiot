# Generated by Django 5.0.7 on 2024-08-02 13:50

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('restiot', '0007_alter_airdata_options_alter_airqualitydata_options_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='airdata',
            name='created_timestamp',
            field=models.DateTimeField(auto_now_add=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='airdata',
            name='generated_timestamp',
            field=models.DateTimeField(auto_now_add=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='airdata',
            name='modified_timestamp',
            field=models.DateTimeField(auto_now=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='airdata',
            name='pressure_unit',
            field=models.CharField(blank=True, choices=[('bars', 'bars'), ('Pa', 'Pa'), ('psi', 'psi'), ('mmHd', 'mmHg'), ('atm', 'atm'), ('inH₂O', 'inH₂O')], max_length=10, null=True),
        ),
        migrations.AlterField(
            model_name='airdata',
            name='temperature_fahrenheit',
            field=models.FloatField(blank=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='airdata',
            name='temperature_unit',
            field=models.CharField(blank=True, choices=[('°F', '°F'), ('°C', '°C'), ('K', 'K')], max_length=10, null=True),
        ),
        migrations.AlterField(
            model_name='airqualitydata',
            name='air_quality_calibration_meaning',
            field=models.CharField(blank=True, choices=[('Low accuracy, self-calibration ongoing', 'Low accuracy, self-calibration ongoing'), ('Medium accuracy, self-calibration ongoing', 'Medium accuracy, self-calibration ongoing'), ('High accuracy', 'High accuracy'), ('Not yet valid, self-calibration incomplete', 'Not yet valid, self-calibration incomplete')], max_length=50),
        ),
        migrations.AlterField(
            model_name='airqualitydata',
            name='air_quality_calibration_status',
            field=models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4)], null=True),
        ),
        migrations.AlterField(
            model_name='airqualitydata',
            name='air_quality_class',
            field=models.CharField(blank=True, choices=[('Good', 'Good'), ('Acceptable', 'Acceptable'), ('Substandard', 'Substandard'), ('Poor', 'Poor'), ('Bad', 'Bad'), ('Very bad', 'Very bad')], max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='lightdata',
            name='light_unit',
            field=models.CharField(blank=True, choices=[('lux', 'lux'), ('candela', 'candela'), ('W/m²', 'W/m²'), ('W/sr', 'W/sr')], default='lux', max_length=10, null=True),
        ),
        migrations.AlterField(
            model_name='particledata',
            name='particle_concentration_unit',
            field=models.CharField(blank=True, choices=[('µg/m³', 'µg/m³'), ('ppm', 'ppm'), ('µg/m³', 'µg/m³'), ('ppb', 'ppb'), ('mg/m³', 'mg/m³'), ('g/m³', 'g/m³')], max_length=10, null=True),
        ),
        migrations.AlterField(
            model_name='particledata',
            name='particle_valid',
            field=models.BooleanField(blank=True, default=True, null=True),
        ),
        migrations.AlterField(
            model_name='sensordatapoint',
            name='generated_timestamp',
            field=models.DateTimeField(auto_now_add=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='sounddata',
            name='sound_unit',
            field=models.CharField(blank=True, choices=[('decibel', 'decibel'), ('W/m²', 'W/m²'), ('sone²', 'sone'), ('phon', 'phon'), ('Pa', 'Pa')], default='decibel', max_length=10, null=True),
        ),
        migrations.AlterField(
            model_name='sounddata',
            name='stable',
            field=models.BooleanField(blank=True, default=True, null=True),
        ),
    ]
